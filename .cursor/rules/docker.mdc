---
description: Docker Best Practices and Guidelines
globs: Dockerfile, docker-compose.yml, .dockerignore, docker/*
---

# Docker Best Practices

## Image Building
- Use multi-stage builds
- Minimize layer count
- Order layers by change frequency
- Use .dockerignore
- Cache dependencies properly
- Use specific base images
- Document build process

## Base Images
- Use official images
- Use specific versions
- Keep images minimal
- Scan for vulnerabilities
- Update regularly
- Document image choices
- Consider size implications

## Security
- Run as non-root
- Remove unnecessary tools
- Scan for vulnerabilities
- Use secrets management
- Update dependencies
- Follow security best practices
- Regular security audits

## Configuration
- Use environment variables
- Use docker-compose
- Configure health checks
- Set resource limits
- Configure logging
- Use proper networking
- Document configuration

## Development
- Use hot reloading
- Share development config
- Use volume mounts
- Configure debugging
- Use docker-compose
- Document setup steps
- Maintain parity with production

## Production
- Optimize for size
- Configure for performance
- Set up monitoring
- Configure logging
- Use orchestration
- Plan for scaling
- Document deployment

## Dependencies
- Cache dependencies
- Use lockfiles
- Update regularly
- Scan for vulnerabilities
- Document dependencies
- Manage versions
- Clean up unused deps

## Performance
- Optimize layer caching
- Minimize image size
- Configure resource limits
- Monitor performance
- Use proper storage
- Optimize networking
- Regular maintenance

## Networking
- Use proper networks
- Configure service discovery
- Set up load balancing
- Manage port mapping
- Configure DNS
- Secure communications
- Document network setup

## Storage
- Use proper volumes
- Configure persistence
- Manage backups
- Clean up unused data
- Monitor usage
- Plan capacity
- Document storage setup 
